var e=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire030e;e.register("5KNkF",(function(t,s){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.default=void 0;var i=e("acw62"),n=e("ayMG0");const o=({title:e,descrition:t,Isvisible:s,setIsvisiable:i})=>(console.log("isvisible:",s),console.log("setIsvisible:",i),(0,n.jsxs)("div",{className:"border-insta",children:[(0,n.jsx)("h1",{children:e}),s?(0,n.jsxs)("div",{children:[(0,n.jsx)("button",{onClick:()=>{i(!s)},children:"Hide"}),(0,n.jsx)("p",{children:t})]}):(0,n.jsx)("button",{onClick:()=>{i(!0)},children:"Show"})]}));var r=()=>{const[e,t]=(0,i.useState)("about");return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{children:"Instamart"}),(0,n.jsxs)("div",{children:[(0,n.jsx)(o,{title:"About Instamart",Isvisible:"about"===e,setIsvisiable:()=>t("about"),descrition:"Even though React only updates the changed DOM nodes, re-rendering still takes some time. In many cases its not a problem, but if the slowdown is noticeable, you can speed all of this up by overriding the lifecycle function shouldComponentUpdate, which is triggered before the re-rendering process starts. The default implementation of this function returns true, leaving React to perform the update:"}),",",(0,n.jsx)(o,{title:"Team Instamart",Isvisible:"team"===e,setIsvisiable:()=>t("team"),descrition:"Even though React only updates the changed DOM nodes, re-rendering still takes some time. In many cases its not a problem, but if the slowdown is noticeable, you can speed all of this up by overriding the lifecycle function shouldComponentUpdate, which is triggered before the re-rendering process starts. The default implementation of this function returns true, leaving React to perform the update:"}),",",(0,n.jsx)(o,{title:"Details Instamart",Isvisible:"details"===e,setIsvisiable:()=>t("details"),descrition:"Even though React only updates the changed DOM nodes, re-rendering still takes some time. In many cases its not a problem, but if the slowdown is noticeable, you can speed all of this up by overriding the lifecycle function shouldComponentUpdate, which is triggered before the re-rendering process starts. The default implementation of this function returns true, leaving React to perform the update:"})]})]})};t.exports.default=r}));
//# sourceMappingURL=Instamart.cb8d6bdb.js.map
