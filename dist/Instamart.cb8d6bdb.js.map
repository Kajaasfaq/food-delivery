{"mappings":"2TAEA,MAAMA,EAAUA,EAACC,MAACA,EAAKC,WAAGA,EAAUC,UAAGA,EAASC,cAAGA,MACvCC,QAAQC,IAAI,aAAcH,GAC1BE,QAAQC,IAAI,gBAAiBF,IAGjC,EAAAG,QAFJ,OAESC,UAAU,eAAcC,SAAA,EAC3B,EAAAF,OAD2BE,MAC3BA,SAAKR,IACJE,GAAa,EAAAI,QADJ,OACIE,SAAA,EAAK,EAAAF,OAALE,UAAaC,QAASA,KAAON,GAAeD,IAAYM,SAAC,UAAa,EAAAF,OAAT,KAASE,SAAIP,QAAyB,EAAAK,OAAV,UAAkBG,QAASA,KAAMN,GAAc,EAAI,EAAGK,SAAC,aAmBvK,IAAAE,EAZiBC,KACd,MAAOC,EAAQC,IAAa,EAAAC,YAAS,SACrC,OACG,EAAAR,mBADH,CACGE,SAAA,EACC,EAAAF,OADDE,MACCA,SAAI,eACJ,EAAAF,QADa,OACbE,SAAA,EACA,EAAAF,OAAEP,EADFS,CACUR,MAAS,kBAAmBE,UAAsB,UAAXU,EAAqBT,cAAeA,IAAMU,EAAU,SAAcZ,WAAY,qZAAuZ,KACthB,EAAAK,OAAEP,EADghB,CACxgBC,MAAS,iBAAmBE,UAAsB,SAAXU,EAAqBT,cAAeA,IAAMU,EAAU,QAAYZ,WAAY,qZAAsZ,KACnhB,EAAAK,OAAEP,EAD8gB,CACtgBC,MAAS,oBAAqBE,UAAsB,YAAXU,EAAsBT,cAAeA,IAAMU,EAAU,WAAgBZ,WAAY,0ZAC9H,EAKUc,UAAAC,QAAAN,C","sources":["src/components/Instamart.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\nconst Section = ({title , descrition , Isvisible , setIsvisiable }) => {\r\n            console.log('isvisible:', Isvisible)\r\n            console.log('setIsvisible:', setIsvisiable) \r\n    return (\r\n\r\n        <div className=\"border-insta\">\r\n          <h1>{title}</h1>\r\n          {Isvisible ? (<div><button onClick={() => {setIsvisiable(!Isvisible)}}>Hide</button><p>{descrition}</p></div>) : <button onClick={() =>{setIsvisiable(true)}}>Show</button> } \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Instamart = () => {\r\n    const [isShow ,setIsshow] = useState(\"about\")\r\n    return (\r\n       <>\r\n        <h1>Instamart</h1>\r\n        <div >\r\n        < Section title = {\"About Instamart\"} Isvisible={isShow === \"about\"}  setIsvisiable={() => setIsshow(\"about\")}     descrition={\"Even though React only updates the changed DOM nodes, re-rendering still takes some time. In many cases its not a problem, but if the slowdown is noticeable, you can speed all of this up by overriding the lifecycle function shouldComponentUpdate, which is triggered before the re-rendering process starts. The default implementation of this function returns true, leaving React to perform the update:\"}  />,\r\n        < Section title = {\"Team Instamart\"}  Isvisible={isShow === \"team\"}   setIsvisiable={() => setIsshow(\"team\")}    descrition={\"Even though React only updates the changed DOM nodes, re-rendering still takes some time. In many cases its not a problem, but if the slowdown is noticeable, you can speed all of this up by overriding the lifecycle function shouldComponentUpdate, which is triggered before the re-rendering process starts. The default implementation of this function returns true, leaving React to perform the update:\"} />,\r\n        < Section title = {\"Details Instamart\"} Isvisible={isShow === \"details\"} setIsvisiable={() => setIsshow(\"details\")}     descrition={\"Even though React only updates the changed DOM nodes, re-rendering still takes some time. In many cases its not a problem, but if the slowdown is noticeable, you can speed all of this up by overriding the lifecycle function shouldComponentUpdate, which is triggered before the re-rendering process starts. The default implementation of this function returns true, leaving React to perform the update:\"}/>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Instamart"],"names":["Section","title","descrition","Isvisible","setIsvisiable","console","log","_jsxRuntime","className","children","onClick","_default","Instamart","isShow","setIsshow","useState","exports","default"],"version":3,"file":"Instamart.cb8d6bdb.js.map"}